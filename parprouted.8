.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PARPROUTED 8"
.TH PARPROUTED 8 "January 2004" "parprouted" "Proxy ARP Bridging Daemon"
.SH "NAME"
\&\fBparprouted\fR \- Proxy ARP IP bridging daemon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBparprouted\fR [\fB\-d\fR] [\fB\-p\fR] \fBinterface\fR [\fBinterface\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
parprouted is a daemon for transparent \s-1IP\s0 (Layer 3) proxy \s-1ARP\s0 bridging. 
Unlike standard bridging, proxy \s-1ARP\s0 bridging allows to bridge Ethernet 
networks behind wireless nodes. Normal L2 bridging does not work between 
wireless nodes because wireless does not know about \s-1MAC\s0 addresses used 
in the wired Ethernet networks. Also this daemon is useful
for making transparent firewalls.
.PP
The daemon listens for incoming \s-1ARP\s0 requests, and in case the location 
of the requested \s-1IP\s0 address is unknown, forwards them to other interfaces, 
as well as updates kernel \s-1ARP\s0 table with the received replies. When 
necessary, the daemon generates an \s-1ARP\s0 reply itself, which causes the 
stations to send traffic to the host daemon is running on. By 
automatically adding appropriate /32 routes to Linux kernel \s-1IP\s0 routing 
table for the hosts learned via \s-1ARP\s0, daemon ensures that the Linux kernel 
will be able to route the packets to the destination host when it receives 
them without any need routing/subnetting manually.  
.PP
All routes entered by the daemon have a metric of 50. 
.PP
Unless you use \fB\-p\fR switch, all entries in the \s-1ARP\s0 table will be
refreshed (rechecked by sending \s-1ARP\s0 requests) every 50 seconds. This
keeps them from being expired by kernel.
.PP
Normally it takes about 60 ms for a bridge to update all its tables and
start sending packets to the destination.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
This daemon can be used for unicast traffic only. I.e., \s-1DHCP\s0 is not supported.
Use software such as dhcrelay to \*(L"bridge\*(R" \s-1DHCP\s0.
.PP
You should have an \s-1IP\s0 address assigned on all of your interfaces that you do 
bridging on. There is no need for this address to be from the same networks as 
the bridged networks. Any dummy address will do.
.PP
The system should have correct default route.
.PP
parprouted requires \*(L"ip\*(R" program from iproute2 tools to be installed in 
/sbin. If it is installed in another location, please replace \*(L"/sbin/ip\*(R" 
occurances in the source with the correct path. As well you should have
proc filesystem mounted in /proc because the daemon uses /proc/net/arp.
.PP
parprouted is designed for and tested only with Linux 2.4.x kernels.
.SH "OPTIONS"
.IX Header "OPTIONS"
The list of interfaces to do bridging on should be given via the command
line.
.PP
The daemon accepts the following switches:
.PP
\&\fB\-d\fR, which stands for debugging. If you run it in debugging mode the daemon 
will not go to background and will print additional debugging information to 
stdout/stderr.
.PP
\&\fB\-p\fR, which makes all \s-1ARP\s0 entries to be permanent. This will also
result in that \s-1ARP\s0 tables will not be refreshed by \s-1ARP\s0 pings.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
To bridge between wlan0 and eth0: \fBparprouted eth0 wlan0\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 2
\& (C) 2004, Vladimir Ivaschenko <vi@maks.net>
\& http://www.hazard.maks.net
.Ve
